name: Firebase App Distribution

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  upload-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Firebase CLI
        run: npm install -g firebase-tools

      - name: Set up Google Cloud credentials
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        run: echo "$GOOGLE_APPLICATION_CREDENTIALS" > /tmp/account.json
        
      - name: Fetch version from Firebase Cloud Storage
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/account.json
        run: |
          BUCKET_NAME="testo-ea214.appspot.com"
          VERSION_FILE="version.txt"
          gcloud auth activate-service-account --key-file=/tmp/account.json
          gsutil ls gs://$BUCKET_NAME
          # Step 1: Download the version.txt file from Firebase Cloud Storage
          gsutil cp gs://$BUCKET_NAME/$VERSION_FILE .

          # Step 2: Read the version number from the file
          CURRENT_VERSION=$(cat $VERSION_FILE)
          echo "Current Version: $CURRENT_VERSION"

          # Step 3: Split version number into major, minor, patch
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"

          # Step 4: Increment version (patch version in this case)
          PATCH=$((PATCH + 1))
          NEW_VERSION_NUMBER="${MAJOR}.${MINOR}.${PATCH}"
          echo "New Version: $NEW_VERSION_NUMBER"
          # Export the new version to be used in subsequent steps
          echo "NEW_VERSION_NUMBER=$NEW_VERSION_NUMBER" >> $GITHUB_ENV

      - name: Dummy Build
        run: echo "Building"
        # run: exit 1
      - name: Upload APK to Firebase App Distribution
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/account.json
        run: |
          firebase appdistribution:distribute bitbar-sample-app.apk \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --groups "testers" \
            --release-notes "Version $NEW_VERSION_NUMBER released." \
            --debug

        continue-on-error: false

      - name: Update version.txt in Firebase Cloud Storage
        if: success()  # to ensure this step only runs if the previous steps succeeded
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/account.json
        run: |
          BUCKET_NAME="testo-ea214.appspot.com"
          VERSION_FILE="version.txt"
          gcloud auth activate-service-account --key-file=/tmp/account.json
          # Step 5: Update the version.txt file with the new version number
          echo "$NEW_VERSION_NUMBER" > $VERSION_FILE

          # Step 6: Upload the updated version.txt file back to Firebase Cloud Storage
          gsutil cp $VERSION_FILE gs://$BUCKET_NAME/$VERSION_FILE
